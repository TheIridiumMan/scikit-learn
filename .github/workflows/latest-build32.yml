name: Build Scikit-learn from Source

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    strategy:
      matrix:
        python-version: [3.9.13]
        architecture: [x86]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.architecture }}

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install numpy==1.19.5
        pip install scipy==1.6.0
        pip install joblib==1.2.0
        pip install threadpoolctl==3.1.0
        pip install cython==3.0.10
        pip install meson-python
        pip install ninja

    - name: Set environment variables
      run: |
        echo "DISTUTILS_USE_SDK=1" >> $GITHUB_ENV
        echo "VCINSTALLDIR=C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\BuildTools\\VC" >> $GITHUB_ENV
        
    - name: Set up MinGW
      uses: egor-tensin/setup-mingw@v1
      with:
        platform: x32
        static: 0
        version: 13.2.0
        hardlinks: 0
        cc: 1
        
      
    - name: Build Scikit-learn
      run: |
        git submodule update --init --recursive
        "C:\Program Files (x86)\Microsoft Visual Studio\2019\BuildTools\VC\Auxiliary\Build\vcvars32.bat"
        pip install --editable . --verbose --no-build-isolation --config-settings editable-verbose=true

    - name: Build wheel for Python ${{ matrix.python-version }}
      run: |
        pip wheel . --wheel-dir dist/
      
    - name: Upload wheel to GitHub Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: scikit-learn-wheels
        path: dist/*.whl
